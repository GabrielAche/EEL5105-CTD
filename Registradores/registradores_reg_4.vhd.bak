library ieee;
use ieee.std_logic_1164.all;

entity reg_4 is
	port(
		clk, reset, enable: in std_logic;
		d: in std_logic_vector(9 downto 0);
		q: out std_logic_vector(9 downto 0)
	);
end entity;

architecture behav of registrador is
	signal actualState, nextState: std_logic_vector(9 downto 0);
begin
	-- next-sate logic (combin)
	nextState <= d when enable='1' else actualState;
	
	-- memory elelement / state (sequen)
	process(clk, reset) is
	begin
		if reset='1' then
			actualState <= (others=>'0');
		elsif rising_edge(clk) then
			actualState <= nextState;
		end if;
	end process;
	
	-- output logic (comb)
	q <= ActualState;
	
end architecture;